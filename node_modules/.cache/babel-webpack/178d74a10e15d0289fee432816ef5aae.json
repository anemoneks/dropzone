{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Developments/Angular-9/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Developments/Angular-9/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Developments/Angular-9/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate } from 'tslib';\nimport { EventEmitter, Renderer2, NgZone, ElementRef, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"selector\"];\nvar _c1 = [[[\"option\"], [\"optgroup\"]]];\nvar _c2 = [\"option, optgroup\"];\nvar NgSelect2Component_1;\n\nvar NgSelect2Component = NgSelect2Component_1 = /*#__PURE__*/function () {\n  // private style = `CSS`;\n  function NgSelect2Component(renderer, zone, _element) {\n    _classCallCheck(this, NgSelect2Component);\n\n    this.renderer = renderer;\n    this.zone = zone;\n    this._element = _element; // value for placeholder\n\n    this.placeholder = '';\n    this.dropdownParent = '';\n    this.allowClear = false; // enable / disable select2\n\n    this.disabled = false; // emitter when value is changed\n\n    this.valueChanged = new EventEmitter();\n    this.element = undefined;\n    this.check = false;\n\n    this.propagateChange = function (value) {};\n  }\n\n  _createClass(NgSelect2Component, [{\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (!this.element) {\n        return;\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {// if (this.cssImport) {\n      //   const head = document.getElementsByTagName('head')[0];\n      //   const link: any = head.children[head.children.length - 1];\n      //   if (!link.version) {\n      //     const newLink = this.renderer.createElement(head, 'style');\n      //     this.renderer.setElementProperty(newLink, 'type', 'text/css');\n      //     this.renderer.setElementProperty(newLink, 'version', 'select2');\n      //     this.renderer.setElementProperty(newLink, 'innerHTML', this.style);\n      //   }\n      // }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this.element) {\n        return;\n      }\n\n      if (changes['data'] && JSON.stringify(changes['data'].previousValue) !== JSON.stringify(changes['data'].currentValue)) {\n        this.initPlugin();\n        var newValue = this.value;\n        this.setElementValue(newValue);\n        this.valueChanged.emit(newValue);\n        this.propagateChange(newValue);\n      }\n\n      if (changes['value'] && changes['value'].previousValue !== changes['value'].currentValue) {\n        var _newValue = changes['value'].currentValue;\n        this.setElementValue(_newValue);\n        this.valueChanged.emit(_newValue);\n        this.propagateChange(_newValue);\n      }\n\n      if (changes['disabled'] && changes['disabled'].previousValue !== changes['disabled'].currentValue) {\n        this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n      }\n\n      if (changes['placeholder'] && changes['placeholder'].previousValue !== changes['placeholder'].currentValue) {\n        this.element.data('select2').$container.find('.select2-selection__placeholder').text(this.placeholder);\n      }\n\n      if (changes['dropdownParent'] && changes['dropdownParent'].previousValue !== changes['dropdownParent'].currentValue) {\n        this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', this.dropdownParent);\n      }\n\n      if (changes['allowClear'] && changes['allowClear'].previousValue !== changes['allowClear'].currentValue) {\n        this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.element = jQuery(this.selector.nativeElement);\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', this.dropdownParent);\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString()); // console.log(this.selector.nativeElement);\n\n      this.initPlugin();\n\n      if (typeof this.value !== 'undefined') {\n        this.setElementValue(this.value);\n      }\n\n      this.element.on('select2:select select2:unselect', function (e) {\n        // const newValue: string = (e.type === 'select2:unselect') ? '' : this.element.val();\n        var newValue = _this.element.val();\n\n        _this.valueChanged.emit(newValue);\n\n        _this.propagateChange(newValue);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.element) {\n        this.element.off('select2:select');\n      }\n    }\n  }, {\n    key: \"initPlugin\",\n    value: function initPlugin() {\n      var _this2 = this;\n\n      if (!this.element.select2) {\n        if (!this.check) {\n          this.check = true;\n          console.log('Please add Select2 library (js file) to the project.' + 'You can download it from https://github.com/select2/select2/tree/master/dist/js.');\n        }\n\n        return;\n      } // If select2 already initialized remove him and remove all tags inside\n\n\n      if (this.element.hasClass('select2-hidden-accessible') === true) {\n        this.element.select2('destroy');\n        this.renderer.setProperty(this.selector.nativeElement, 'innerHTML', '');\n      }\n\n      var options = {\n        data: this.data,\n        width: this.width ? this.width : 'resolve',\n        placeholder: this.placeholder\n      };\n\n      if (this.dropdownParent) {\n        options = {\n          data: this.data,\n          width: this.width ? this.width : 'resolve',\n          dropdownParent: jQuery('#' + this.dropdownParent)\n        };\n      }\n\n      Object.assign(options, this.options);\n\n      if (options.matcher) {\n        jQuery.fn.select2.amd.require(['select2/compat/matcher'], function (oldMatcher) {\n          options.matcher = oldMatcher(options.matcher);\n\n          _this2.element.select2(options);\n\n          if (typeof _this2.value !== 'undefined') {\n            _this2.setElementValue(_this2.value);\n          }\n        });\n      } else {\n        this.element.select2(options);\n      }\n\n      this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n    }\n  }, {\n    key: \"setElementValue\",\n    value: function setElementValue(newValue) {\n      // this.zone.run(() => {\n      if (Array.isArray(newValue)) {\n        var _iterator = _createForOfIteratorHelper(this.selector.nativeElement.options),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            this.renderer.setProperty(option, 'selected', newValue.indexOf(option.value) > -1);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.renderer.setProperty(this.selector.nativeElement, 'value', newValue);\n      }\n\n      if (this.element) {\n        this.element.trigger('change.select2');\n      } // });\n\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      if (value !== undefined) {\n        this.value = value;\n        this.setElementValue(value);\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched() {}\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n    }\n  }]);\n\n  return NgSelect2Component;\n}();\n\nNgSelect2Component.ɵfac = function NgSelect2Component_Factory(t) {\n  return new (t || NgSelect2Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgSelect2Component.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgSelect2Component,\n  selectors: [[\"ng-select2\"]],\n  viewQuery: function NgSelect2Component_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selector = _t.first);\n    }\n  },\n  inputs: {\n    placeholder: \"placeholder\",\n    dropdownParent: \"dropdownParent\",\n    allowClear: \"allowClear\",\n    disabled: \"disabled\",\n    value: \"value\",\n    data: \"data\",\n    width: \"width\",\n    options: \"options\"\n  },\n  outputs: {\n    valueChanged: \"valueChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgSelect2Component_1;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 0,\n  consts: [[\"selector\", \"\"]],\n  template: function NgSelect2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵelementStart(0, \"select\", null, 0);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgSelect2Component.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([ViewChild('selector', {\n  static: true\n})], NgSelect2Component.prototype, \"selector\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"data\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"placeholder\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"dropdownParent\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"allowClear\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"value\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"width\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgSelect2Component.prototype, \"options\", void 0);\n\n__decorate([Output()], NgSelect2Component.prototype, \"valueChanged\", void 0);\n\nvar NgSelect2Module = function NgSelect2Module() {\n  _classCallCheck(this, NgSelect2Module);\n};\n\nNgSelect2Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgSelect2Module\n});\nNgSelect2Module.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgSelect2Module_Factory(t) {\n    return new (t || NgSelect2Module)();\n  },\n  imports: [[CommonModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgSelect2Component, [{\n    type: Component,\n    args: [{\n      selector: 'ng-select2',\n      template: \"<select #selector>\\n  <ng-content select=\\\"option, optgroup\\\">\\n  </ng-content>\\n</select>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgSelect2Component_1;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    placeholder: [{\n      type: Input\n    }],\n    dropdownParent: [{\n      type: Input\n    }],\n    allowClear: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    valueChanged: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    selector: [{\n      type: ViewChild,\n      args: ['selector', {\n        static: true\n      }]\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgSelect2Module, {\n    declarations: function declarations() {\n      return [NgSelect2Component];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgSelect2Component];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgSelect2Module, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgSelect2Component],\n      exports: [NgSelect2Component]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of ng-select2\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgSelect2Component, NgSelect2Module };","map":{"version":3,"sources":["ng:/ng-select2/lib/ng-select2.component.ts","ng:/ng-select2/lib/ng-select2.module.ts","ng:/ng-select2/public_api.ts","ng:/ng-select2/ng-select2.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/// <reference types=\"select2\" />\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Select2OptionData } from './ng-select2.interface';\nimport { Options } from 'select2';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'ng-select2',\n  templateUrl: './ng-select2.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgSelect2Component),\n      multi: true,\n    },\n  ],\n})\nexport class NgSelect2Component implements AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor {\n  @ViewChild('selector', { static: true }) selector: ElementRef;\n\n  // data for select2 drop down\n  @Input() data: Array<Select2OptionData>;\n\n  // value for placeholder\n  @Input() placeholder = '';\n\n  @Input() dropdownParent = '';\n\n\n  @Input() allowClear = false;\n\n  // value for select2\n  @Input() value: string | string[];\n\n  // width of select2 input\n  @Input() width: string;\n\n  // enable / disable select2\n  @Input() disabled = false;\n\n  // all additional options\n  @Input() options: Options;\n\n  // emitter when value is changed\n  @Output() valueChanged = new EventEmitter<string | string[]>();\n\n  private element: any = undefined;\n  private check = false;\n  // private style = `CSS`;\n\n  constructor(private renderer: Renderer2, public zone: NgZone, public _element: ElementRef) {\n  }\n\n  ngDoCheck() {\n    if (!this.element) {\n      return;\n    }\n  }\n\n  ngOnInit() {\n    // if (this.cssImport) {\n    //   const head = document.getElementsByTagName('head')[0];\n    //   const link: any = head.children[head.children.length - 1];\n\n    //   if (!link.version) {\n    //     const newLink = this.renderer.createElement(head, 'style');\n    //     this.renderer.setElementProperty(newLink, 'type', 'text/css');\n    //     this.renderer.setElementProperty(newLink, 'version', 'select2');\n    //     this.renderer.setElementProperty(newLink, 'innerHTML', this.style);\n    //   }\n    // }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (!this.element) {\n      return;\n    }\n\n    if (changes['data'] && JSON.stringify(changes['data'].previousValue) !== JSON.stringify(changes['data'].currentValue)) {\n      this.initPlugin();\n\n      const newValue: string | string[] = this.value;\n      this.setElementValue(newValue);\n      this.valueChanged.emit(newValue);\n      this.propagateChange(newValue);\n    }\n\n    if (changes['value'] && changes['value'].previousValue !== changes['value'].currentValue) {\n\n      const newValue: string = changes['value'].currentValue;\n\n      this.setElementValue(newValue);\n      this.valueChanged.emit(newValue);\n      this.propagateChange(newValue);\n    }\n\n    if (changes['disabled'] && changes['disabled'].previousValue !== changes['disabled'].currentValue) {\n      this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n    }\n\n    if (changes['placeholder'] && changes['placeholder'].previousValue !== changes['placeholder'].currentValue) {\n      this.element.data('select2').$container.find('.select2-selection__placeholder').text(this.placeholder);\n    }\n\n    if (changes['dropdownParent'] && changes['dropdownParent'].previousValue !== changes['dropdownParent'].currentValue) {\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', this.dropdownParent);\n    }\n\n    if (changes['allowClear'] && changes['allowClear'].previousValue !== changes['allowClear'].currentValue) {\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\n    }\n  }\n\n  ngAfterViewInit() {\n    this.element = jQuery(this.selector.nativeElement);\n    this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', this.dropdownParent);\n    this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\n    // console.log(this.selector.nativeElement);\n\n    this.initPlugin();\n\n    if (typeof this.value !== 'undefined') {\n      this.setElementValue(this.value);\n    }\n\n    this.element.on('select2:select select2:unselect', (e: any) => {\n      // const newValue: string = (e.type === 'select2:unselect') ? '' : this.element.val();\n      const newValue = this.element.val();\n\n      this.valueChanged.emit(newValue);\n      this.propagateChange(newValue);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.off('select2:select');\n    }\n  }\n\n  private initPlugin() {\n    if (!this.element.select2) {\n      if (!this.check) {\n        this.check = true;\n        console.log('Please add Select2 library (js file) to the project.' +\n          'You can download it from https://github.com/select2/select2/tree/master/dist/js.');\n      }\n\n      return;\n    }\n\n    // If select2 already initialized remove him and remove all tags inside\n    if (this.element.hasClass('select2-hidden-accessible') === true) {\n      this.element.select2('destroy');\n      this.renderer.setProperty(this.selector.nativeElement, 'innerHTML', '');\n    }\n\n    let options: Options = {\n      data: this.data,\n      width: (this.width) ? this.width : 'resolve',\n      placeholder: this.placeholder\n    };\n\n    if (this.dropdownParent) {\n      options = {\n        data: this.data,\n        width: (this.width) ? this.width : 'resolve',\n        dropdownParent: jQuery('#' + this.dropdownParent),\n      };\n    }\n\n    Object.assign(options, this.options);\n\n    if (options.matcher) {\n      jQuery.fn.select2.amd.require(['select2/compat/matcher'], (oldMatcher: any) => {\n        options.matcher = oldMatcher(options.matcher);\n        this.element.select2(options);\n\n        if (typeof this.value !== 'undefined') {\n          this.setElementValue(this.value);\n        }\n      });\n    } else {\n      this.element.select2(options);\n    }\n\n    this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n  }\n\n  private setElementValue(newValue: string | string[]) {\n\n    // this.zone.run(() => {\n\n    if (Array.isArray(newValue)) {\n\n      for (const option of this.selector.nativeElement.options) {\n        this.renderer.setProperty(option, 'selected', (newValue.indexOf(option.value) > -1));\n      }\n    } else {\n      this.renderer.setProperty(this.selector.nativeElement, 'value', newValue);\n    }\n\n    if (this.element) {\n      this.element.trigger('change.select2');\n    }\n    // });\n  }\n\n\n  writeValue(value: any) {\n\n    if (value !== undefined) {\n      this.value = value;\n      this.setElementValue(value);\n    }\n  }\n\n  propagateChange = (value: string | string[]) => { };\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgSelect2Component } from './ng-select2.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgSelect2Component],\n  exports: [NgSelect2Component]\n})\nexport class NgSelect2Module { }\n","/*\n * Public API Surface of ng-select2\n */\n\nexport * from './lib/ng-select2.component';\nexport * from './lib/ng-select2.module';\nexport * from './lib/ng-select2.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}