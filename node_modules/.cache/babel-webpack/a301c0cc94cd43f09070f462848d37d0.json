{"ast":null,"code":"/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nvar DataTableDirective =\n/** @class */\nfunction () {\n  function DataTableDirective(el) {\n    this.el = el;\n    /**\n     * The DataTable option you pass to configure your table.\n     */\n\n    this.dtOptions = {};\n  }\n\n  DataTableDirective.prototype.ngOnInit = function () {\n    var _this = this;\n\n    if (this.dtTrigger) {\n      this.dtTrigger.subscribe(function () {\n        _this.displayTable();\n      });\n    } else {\n      this.displayTable();\n    }\n  };\n\n  DataTableDirective.prototype.ngOnDestroy = function () {\n    if (this.dtTrigger) {\n      this.dtTrigger.unsubscribe();\n    }\n\n    if (this.dt) {\n      this.dt.destroy(true);\n    }\n  };\n\n  DataTableDirective.prototype.displayTable = function () {\n    var _this = this;\n\n    this.dtInstance = new Promise(function (resolve, reject) {\n      Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n        // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n        setTimeout(function () {\n          _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n          resolve(_this.dt);\n        });\n      });\n    });\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DataTableDirective.prototype, \"dtOptions\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Subject)], DataTableDirective.prototype, \"dtTrigger\", void 0);\n\n  DataTableDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], DataTableDirective);\n\n  DataTableDirective.ɵfac = function DataTableDirective_Factory(t) {\n    return new (t || DataTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  DataTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DataTableDirective,\n    selectors: [[\"\", \"datatable\", \"\"]],\n    inputs: {\n      dtOptions: \"dtOptions\",\n      dtTrigger: \"dtTrigger\"\n    }\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DataTableDirective, [{\n      type: Directive,\n      args: [{\n        selector: '[datatable]'\n      }]\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }];\n    }, {\n      dtOptions: [{\n        type: Input\n      }],\n      dtTrigger: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return DataTableDirective;\n}();\n\nexport { DataTableDirective };","map":{"version":3,"sources":["angular-datatables.directive.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableDirective.prototype, \"dtOptions\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Subject)\n    ], DataTableDirective.prototype, \"dtTrigger\", void 0);\n    DataTableDirective = __decorate([\n        Directive({\n            selector: '[datatable]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], DataTableDirective);\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n"]},"metadata":{},"sourceType":"module"}