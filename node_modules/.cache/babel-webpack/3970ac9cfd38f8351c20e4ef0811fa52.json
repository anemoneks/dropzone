{"ast":null,"code":"import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\n/**\r\n * The base implementation of `_.orderBy` without param guards.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\r\n * @param {string[]} orders The sort orders of `iteratees`.\r\n * @returns {Array} Returns the new sorted array.\r\n */\n\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n  var result = baseMap(collection, function (value, key, collection) {\n    var criteria = arrayMap(iteratees, function (iteratee) {\n      return iteratee(value);\n    });\n    return {\n      'criteria': criteria,\n      'index': ++index,\n      'value': value\n    };\n  });\n  return baseSortBy(result, function (object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;","map":{"version":3,"sources":["C:/Developments/Original/node_modules/lodash-es/_baseOrderBy.js"],"names":["arrayMap","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","baseOrderBy","collection","iteratees","orders","index","length","result","value","key","criteria","iteratee","object","other"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;;;;;;;;;;AASA,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoD;AAClD,MAAIC,KAAK,GAAG,CAAC,CAAb;AACAF,EAAAA,SAAS,GAAGT,QAAQ,CAACS,SAAS,CAACG,MAAV,GAAmBH,SAAnB,GAA+B,CAACH,QAAD,CAAhC,EAA4CF,SAAS,CAACH,YAAD,CAArD,CAApB;AAEA,MAAIY,MAAM,GAAGX,OAAO,CAACM,UAAD,EAAa,UAASM,KAAT,EAAgBC,GAAhB,EAAqBP,UAArB,EAAiC;AAChE,QAAIQ,QAAQ,GAAGhB,QAAQ,CAACS,SAAD,EAAY,UAASQ,QAAT,EAAmB;AACpD,aAAOA,QAAQ,CAACH,KAAD,CAAf;AACD,KAFsB,CAAvB;AAGA,WAAO;AAAE,kBAAYE,QAAd;AAAwB,eAAS,EAAEL,KAAnC;AAA0C,eAASG;AAAnD,KAAP;AACD,GALmB,CAApB;AAOA,SAAOX,UAAU,CAACU,MAAD,EAAS,UAASK,MAAT,EAAiBC,KAAjB,EAAwB;AAChD,WAAOd,eAAe,CAACa,MAAD,EAASC,KAAT,EAAgBT,MAAhB,CAAtB;AACD,GAFgB,CAAjB;AAGD;;AAED,eAAeH,WAAf","sourcesContent":["import arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseMap from './_baseMap.js';\r\nimport baseSortBy from './_baseSortBy.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport compareMultiple from './_compareMultiple.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * The base implementation of `_.orderBy` without param guards.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\r\n * @param {string[]} orders The sort orders of `iteratees`.\r\n * @returns {Array} Returns the new sorted array.\r\n */\r\nfunction baseOrderBy(collection, iteratees, orders) {\r\n  var index = -1;\r\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\r\n\r\n  var result = baseMap(collection, function(value, key, collection) {\r\n    var criteria = arrayMap(iteratees, function(iteratee) {\r\n      return iteratee(value);\r\n    });\r\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\r\n  });\r\n\r\n  return baseSortBy(result, function(object, other) {\r\n    return compareMultiple(object, other, orders);\r\n  });\r\n}\r\n\r\nexport default baseOrderBy;\r\n"]},"metadata":{},"sourceType":"module"}