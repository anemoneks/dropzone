{"version":3,"sources":["./src/app/services/house.service.ts","./src/app/services/http-client-house.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { IHouse } from '../interfaces/i-house';\r\nimport { IBill } from '../interfaces/i-bill';\r\n\r\nexport abstract class HouseService {\r\n  housesUrl = '/api/houses';  // URL to web api\r\n\r\n  abstract getHouses(): Observable<IHouse[]>;\r\n  abstract getHouse(id: string): Observable<IHouse>;\r\n  abstract addHouse(house: IHouse): Observable<IHouse>;\r\n  abstract deleteHouse(house: IHouse | string): Observable<IHouse>;\r\n  abstract searchHouses(term: string): Observable<IHouse[]>;\r\n  abstract updateHouse(house: IHouse): Observable<IHouse>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\n\r\nimport { HouseService } from './house.service';\r\nimport { IHouse } from '../interfaces/i-house';\r\n\r\nconst cudOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': localStorage.getItem('jwtToken')\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpClientHouseService extends HouseService {\r\n\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getHouses(): Observable<IHouse[]> {\r\n    return this.http.get<IHouse[]>(this.housesUrl, cudOptions).pipe(\r\n      // tap(data => console.log(data)), // eyeball results in the console\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getOwnerHouses(): Observable<IHouse[]> {\r\n    const url = `${this.housesUrl}/owner`;\r\n    return this.http.get<IHouse[]>(url, cudOptions).pipe(\r\n      // tap(data => console.log(data)), // eyeball results in the console\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // This get-by-id will 404 when id not found\r\n  getHouse(id: string): Observable<IHouse> {\r\n    const url = `${this.housesUrl}/${id}`;\r\n    return this.http.get<IHouse>(url, cudOptions).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // This get-by-id does not 404; returns undefined when id not found\r\n  // getHouse<Data>(id: number): Observable<House> {\r\n  //   const url = `${this._heroesUrl}/?id=${id}`;\r\n  //   return this.http.get<House[]>(url)\r\n  //     .map(heroes => heroes[0] as House)\r\n  //     .catch(this.handleError);\r\n  // }\r\n\r\n  addHouse(house: IHouse): Observable<IHouse> {\r\n    console.log(house);\r\n    return this.http.post<IHouse>(this.housesUrl, house, cudOptions).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  deleteHouse(house: IHouse | string): Observable<IHouse> {\r\n    const _id = typeof house === 'string' ? house : house._id;\r\n    const url = `${this.housesUrl}/${_id}`;\r\n\r\n    return this.http.delete<IHouse>(url, cudOptions).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  searchHouses(term: string): Observable<IHouse[]> {\r\n    term = term.trim();\r\n    // add safe, encoded search parameter if term is present\r\n    const options = term ?\r\n      { params: new HttpParams().set('name', term) } : {};\r\n\r\n    return this.http.get<IHouse[]>(this.housesUrl, options).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateHouse(house: IHouse): Observable<null | IHouse> {\r\n    return this.http.put<IHouse>(this.housesUrl, house, cudOptions).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    // and reformat for house consumption\r\n    console.error(error); // log to console instead\r\n    return throwError(error);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}