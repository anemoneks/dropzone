{"version":3,"sources":["./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/models/login.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClientUserService } from './../services/http-client-user.service';\r\nimport { Login } from './../models/login';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup = this.formBuilder.group(new Login());;;\r\n  returnUrl: string = '/';\r\n  @ViewChild('content3') content3;\r\n\r\n  f(): FormGroup {\r\n    return this.loginForm;\r\n  };\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private HttpClientUserService: HttpClientUserService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get the query params\r\n    this.route.queryParams\r\n      .subscribe(params => this.returnUrl = (params['returnUrl'] || '').trim() == '' ? '/' : '');\r\n\r\n    let username = localStorage.getItem('username') || '';\r\n    let password = localStorage.getItem('password') || '';\r\n\r\n    this.loginForm.controls.username.setValue(username);\r\n    this.loginForm.controls.password.setValue(password);\r\n    this.loginForm.controls.rememberPassword.setValue(username != '');\r\n\r\n    this.loginForm.controls.username.setValidators(Validators.required);\r\n    this.loginForm.controls.password.setValidators(Validators.required);\r\n  }\r\n\r\n  openSm(content3) {\r\n    this.modalService.open(content3, { size: 'sm' });\r\n  }\r\n\r\n  login(): void {\r\n    let username: string = (this.loginForm.get('username').value || '').trim();\r\n    let password: string = (this.loginForm.get('password').value || '').trim();\r\n    let remmeberPassword: boolean = this.loginForm.get('rememberPassword').value || false;\r\n\r\n    if (this.loginForm.valid) {\r\n\r\n      this.HttpClientUserService.signIn(username, password)\r\n        .subscribe(x => {\r\n          if ((x['success'] as boolean)) {\r\n            let token = (x['token'] as string);\r\n            localStorage.setItem('jwtToken', token);\r\n\r\n            // save password\r\n            if (remmeberPassword) {\r\n              localStorage.setItem('username', username);\r\n              localStorage.setItem('password', password);\r\n            }\r\n            else {\r\n              localStorage.removeItem('username');\r\n              localStorage.removeItem('password');\r\n            }\r\n            \r\n            this.route.queryParams.subscribe(x => window.location.href = x.returnUrl);\r\n          }\r\n          else {\r\n            this.openSm(this.content3);\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-form\">\r\n    <form [formGroup]=\"loginForm\">\r\n\r\n        <h2 class=\"text-center\">Log in</h2>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f().controls.username?.errors?.required\">\r\n            Username must not be empty.\r\n        </div>\r\n        \r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f().controls.password?.errors?.required\">\r\n            Password must not be empty.\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Password\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button class=\"btn btn-primary btn-block\" (click)=\"login()\">Log in</button>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n            <label class=\"float-left form-check-label\"><input type=\"checkbox\" formControlName=\"rememberPassword\"> Remember me</label>\r\n            <a href=\"#\" class=\"float-right\">Forgot Password?</a>\r\n        </div>\r\n\r\n        <ng-template #content3 let-modal>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">User Authentication</h4>\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Failed to authenticate.</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\r\n            </div>\r\n        </ng-template>\r\n    </form>\r\n    <p class=\"text-center\"><a href=\"#\">Create an Account</a></p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Login',\r\n      urls: [\r\n        { title: 'Login', url: '/login' },\r\n        { title: 'Login' }\r\n      ]\r\n    },\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule, ReactiveFormsModule, CommonModule, RouterModule.forChild(routes), ChartsModule,],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {\r\n\r\n}\r\n","import { ILogin } from \"../interfaces/i-login\";\r\n\r\nexport class Login implements ILogin {\r\n    constructor() {\r\n        this.username = null;\r\n        this.password = null;\r\n        this.rememberPassword = false;\r\n    }\r\n\r\n    username: string;\r\n    password: string;\r\n    rememberPassword: boolean;\r\n}\r\n"],"sourceRoot":"webpack:///"}